buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'



version = "1.0" // Your mod version
group = "de.maxanier.vampirismapiexample" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "vampirism-api-example"

sourceCompatibility = targetCompatibility = "1.7" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.7"
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"


    mappings = "snapshot_20160518"
}

repositories {
    //Maven repo for Vampirism
    maven {
        name = "MaxanierMaven"
        url = "https://maxanier.de/maven2"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}
dependencies {
    //compile against the Vampirism API
    deobfCompile "de.teamlapen.vampirism:Vampirism:${mc_version}-${vampirism_version}:api"
    // Version is taken from gradle.properties
    //at runtime (in your development environment) use the full Vampirism jar
    runtime "de.teamlapen.vampirism:Vampirism:${mc_version}-${vampirism_version}"
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }
